[tox]
envlist = py38,py39,py310,py311,flake8,mypy,docs,coverage-report
isolated_build = true
skip_missing_interpreters = true

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311,flake8,mypy,docs

[testenv]
deps = 
    -r{toxinidir}/requirements/test.txt
setenv =
    PYTHONPATH = {toxinidir}/src
    QT_QPA_PLATFORM = offscreen
    PYPDF_TEST_MODE = 1
commands = 
    pytest {posargs:tests} --cov=pypdf_tools --cov-append

[testenv:flake8]
deps = 
    flake8>=4.0.0
    flake8-docstrings
    flake8-import-order
    flake8-bugbear
commands = 
    flake8 src tests

[testenv:mypy]
deps = 
    mypy>=0.950
    types-PyYAML
    types-requests
    types-toml
commands = 
    mypy src/pypdf_tools

[testenv:docs]
deps = 
    -r{toxinidir}/requirements/dev.txt
commands = 
    sphinx-build -W -b html docs docs/_build/html
    sphinx-build -W -b linkcheck docs docs/_build/linkcheck

[testenv:coverage-report]
deps = 
    coverage[toml]
skip_install = true
commands = 
    coverage combine
    coverage report
    coverage html

[testenv:security]
deps = 
    bandit[toml]
    safety
commands = 
    bandit -r src/pypdf_tools
    safety check

[testenv:build]
deps = 
    build
    twine
commands = 
    python -m build
    twine check dist/*

[testenv:pre-commit]
deps = pre-commit
commands = pre-commit run --all-files

[flake8]
max-line-length = 88
extend-ignore = E203, W503, D100, D101, D102, D103, D104, D105
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv,
    venv

[coverage:run]
source = src/pypdf_tools
branch = true
parallel = true

[coverage:paths]
source =
    src/pypdf_tools
    */site-packages/pypdf_tools

[coverage:report]
show_missing = true
precision = 2
skip_covered = false
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:

[coverage:html]
directory = htmlcov
